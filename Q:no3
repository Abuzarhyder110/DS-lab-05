#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

int countElements(Node* head) {
    int count = 0;
    Node* current = head;
    while (current != nullptr) {
        count++;
        current = current->next;
    }
    return count;
}

void append(Node*& head, int new_data) {
    Node* new_node = new Node();
    new_node->data = new_data;
    new_node->next = nullptr;
    
    if (head == nullptr) {
        head = new_node;
        return;
    }
    
    Node* last = head;
    while (last->next != nullptr) {
        last = last->next;
    }
    last->next = new_node;
}

void insertAtBeginning(Node*& head, int new_data) {
    Node* new_node = new Node();
    new_node->data = new_data;
    new_node->next = head;
    head = new_node;
}

void insertAtPosition(Node*& head, int new_data, int position) {
    if (position < 1) {
        cout << "Invalid position!" << endl;
        return;
    }
    
    Node* new_node = new Node();
    new_node->data = new_data;
    
    if (position == 1) {
        new_node->next = head;
        head = new_node;
        return;
    }
    
    Node* current = head;
    for (int i = 1; i < position - 1 && current != nullptr; i++) {
        current = current->next;
    }
    
    if (current == nullptr) {
        cout << "Position out of bounds!" << endl;
        return;
    }
    
    new_node->next = current->next;
    current->next = new_node;
}

 main() {
    Node* head = nullptr;
    
    append(head, 10);
    append(head, 20);
    append(head, 30);
    

    insertAtBeginning(head, 5);
    
    insertAtPosition(head, 15, 3);
    
    int NUM = countElements(head);
    cout << "Number of elements in the linked list: " << NUM << endl;
    
    return 0;
}
